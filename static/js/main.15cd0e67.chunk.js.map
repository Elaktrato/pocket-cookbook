{"version":3,"sources":["logo.svg","Home.js","Recipe.js","App.js","reportWebVitals.js","index.js"],"names":["Home","query","useState","recipes","setRecipes","console","log","process","useEffect","window","fetch","method","headers","Authorization","body","JSON","stringify","then","response","json","data","errors","error","recipeCollection","items","className","map","r","i","to","sys","id","name","useParams","recipe","setRecipe","src","picture","url","course","ingredients","ingredient","documentToReactComponents","instruction","App","exact","path","component","Recipe","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","basename","document","getElementById"],"mappings":"6LAAe,I,kCC4EAA,MAxEf,WAEI,IAAMC,EAAK,kMAeb,EAA8BC,mBAAS,MAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KA6BA,OA1BAC,QAAQC,IAAIC,+CACZF,QAAQC,IAAIC,gBACZC,qBAAU,WACRC,OACGC,MADH,2DAC6DH,gBAA6C,CACtGI,OAAQ,OACRC,QAAS,CACP,eAAgB,mBAEhBC,cAAc,UAAD,OAAYN,gDAG3BO,KAAMC,KAAKC,UAAU,CAAEf,YAExBgB,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,YAAuB,IAApBG,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OACTA,GACFhB,QAAQiB,MAAMD,GAEhBhB,QAAQC,IAAIL,GAEZG,EAAWgB,EAAKG,iBAAiBC,OACjCnB,QAAQC,IAAIH,QAEf,IAEEA,EAKH,sBAAKsB,UAAU,MAAf,UACE,iDAGA,6BAEItB,EAAQuB,KAAI,SAACC,EAAGC,GACd,OACE,6BACE,cAAC,IAAD,CAASC,GAAE,WAAMF,EAAEG,IAAIC,IAAvB,SACGJ,EAAEK,iBAdV,c,QCwEIhC,MArHf,WAEE,IAAM+B,EAAOE,cAAPF,GA4BE9B,EAAK,qCAEK8B,EAFL,uUAyBX,EAA4B7B,mBAAS,MAArC,mBAAOgC,EAAP,KAAeC,EAAf,KA6BF,OA3BF9B,QAAQC,IAAIC,+CACVC,qBAAU,WACRC,OACGC,MADH,2DAC6DH,gBAA6C,CACtGI,OAAQ,OACRC,QAAS,CACP,eAAgB,mBAEhBC,cAAc,UAAD,OAAYN,gDAG3BO,KAAMC,KAAKC,UAAU,CAAEf,YAExBgB,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,YAAuB,IAApBG,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OACTA,GACFhB,QAAQiB,MAAMD,GAKhBhB,QAAQC,IAAIc,GACZe,EAAUf,EAAKc,QACf7B,QAAQC,IAAIc,EAAKc,aAEpB,IAEEA,EAKH,sBAAKT,UAAU,MAAf,UACE,mCACE,sBAAKA,UAAU,oBAAf,UACE,qBAAKA,UAAU,UAAf,SACF,cAAC,IAAD,CAASI,GAAE,IAAOJ,UAAU,iBAA5B,SACG,QAED,oBAAIA,UAAU,cAAd,SAEAS,EAAOF,UAGT,qBAAKP,UAAU,uBAAf,SACA,qBAAKA,UAAU,cAAcW,IAAKF,EAAOG,QAAQC,WAGnD,sBAAKb,UAAU,eAAf,qBAAuCS,EAAOK,UAC9C,qBAAKd,UAAU,iCAAf,SACA,qBAAKA,UAAU,wBAAf,SACGS,EAAOM,YAAYd,KAAI,SAAAe,GACtB,OAAO,qBAAKhB,UAAU,mBAAf,SAAmCgB,WAG9C,qBAAKhB,UAAU,qBAAf,SAAqCiB,oCAA0BR,EAAOS,YAAYxB,WA3B7E,cCtDIyB,MAXf,WAGE,OACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAW/C,IACjC,cAAC,IAAD,CAAO6C,OAAK,EAACC,KAAK,OAAOC,UAAWC,QCpBzBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlC,MAAK,YAAkD,IAA/CmC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAAC,IAAD,CAAeC,SAAS,oBAAxB,SACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.15cd0e67.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import './App.css';\r\nimport React, { useState, useEffect } from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nfunction Home() {\r\n\r\n    const query = `\r\n    {\r\n      recipeCollection {\r\n        items {\r\n          sys {id},\r\n          name,\r\n          course,\r\n          picture {\r\n            url\r\n          }\r\n        }\r\n      }\r\n    }\r\n    `\r\n\r\n  const [recipes, setRecipes] = useState(null)\r\n\r\n\r\n  console.log(process.env.REACT_APP_CONTENTFUL_ACCESS_TOKEN)\r\n  console.log(process.env.REACT_APP_CONTENTFUL_SPACE_ID)\r\n  useEffect(() => {\r\n    window\r\n      .fetch(`https://graphql.contentful.com/content/v1/spaces/${process.env.REACT_APP_CONTENTFUL_SPACE_ID}`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          // Authenticate the request\r\n          Authorization: `Bearer ${process.env.REACT_APP_CONTENTFUL_ACCESS_TOKEN}`,\r\n        },\r\n        // send the GraphQL query\r\n        body: JSON.stringify({ query }),\r\n      })\r\n      .then((response) => response.json())\r\n      .then(({ data, errors }) => {\r\n        if (errors) {\r\n          console.error(errors);\r\n        }\r\n        console.log(query)\r\n        // rerender the entire component with new data\r\n        setRecipes(data.recipeCollection.items)\r\n        console.log(recipes)\r\n      });\r\n  }, []);\r\n\r\n  if (!recipes) {\r\n    return \"Loading...\"\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header >\r\n        Our Recipes\r\n      </header>\r\n      <ul>\r\n        {\r\n          recipes.map((r, i) => {\r\n            return (\r\n              <li >\r\n                <NavLink to={`/${r.sys.id}`}>\r\n                  {r.name}\r\n                </ NavLink>\r\n              </li>)\r\n          })\r\n\r\n        }\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import './App.css';\r\nimport React, { useState, useEffect } from 'react';\r\nimport {useParams, NavLink} from 'react-router-dom';\r\nimport { documentToReactComponents } from \"@contentful/rich-text-react-renderer\";\r\n\r\n\r\nfunction Home() {\r\n    \r\n  let { id } = useParams();\r\n\r\n    // const pageQuery = graphql`\r\n    // {\r\n    //     recipe(id: \"${id}\"){\r\n    //       sys{id}\r\n    //       name\r\n    //       course\r\n    //       picture {\r\n    //         title \r\n    //         description \r\n    //         contentType\r\n    //         fileName\r\n    //         size\r\n    //         url\r\n    //         width\r\n    //         height\r\n    //       }\r\n    //       ingredients{\r\n    //         childMarkdownRemark {\r\n    //           html \r\n    //         } \r\n    //       }\r\n    //       instructions\r\n    //     }\r\n    //   }\r\n    // `\r\n\r\n    const query = `\r\n    {\r\n      recipe(id: \"${id}\"){\r\n        sys{id}\r\n        name\r\n        course\r\n        picture {\r\n          title \r\n          description \r\n          contentType\r\n          fileName\r\n          size\r\n          url\r\n          width\r\n          height\r\n        }\r\n        ingredients\r\n        instruction{\r\n          json\r\n        }\r\n      }\r\n    }\r\n    `\r\n\r\n\r\n    const [recipe, setRecipe] = useState(null)\r\n\r\nconsole.log(process.env.REACT_APP_CONTENTFUL_ACCESS_TOKEN)\r\n  useEffect(() => { \r\n    window\r\n      .fetch(`https://graphql.contentful.com/content/v1/spaces/${process.env.REACT_APP_CONTENTFUL_SPACE_ID}`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          // Authenticate the request\r\n          Authorization: `Bearer ${process.env.REACT_APP_CONTENTFUL_ACCESS_TOKEN}`,\r\n        },\r\n        // send the GraphQL query\r\n        body: JSON.stringify({ query }),\r\n      })\r\n      .then((response) => response.json())\r\n      .then(({ data, errors }) => {\r\n        if (errors) {\r\n          console.error(errors);\r\n        }\r\n\r\n        // rerender the entire component with new data\r\n        \r\n        console.log(data)\r\n        setRecipe(data.recipe)\r\n        console.log(data.recipe)\r\n      });\r\n  }, []);\r\n\r\n  if (!recipe) {\r\n    return \"Loading...\"\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header >\r\n        <div className=\"headlineContainer\">\r\n          <div className=\"backBtn\">\r\n        <NavLink to={`/`} className=\"backBtnContent\">\r\n          {\"<\"}\r\n          </NavLink></div>\r\n          <h1 className=\"recipeTitle\">\r\n        {\r\n          recipe.name\r\n        }</h1>\r\n        </div>\r\n        <div className=\"recipeImageContainer\">\r\n        <img className=\"recipeImage\" src={recipe.picture.url}></img>\r\n        </div>\r\n      </header>\r\n      <div className=\"recipeCourse\">Course: {recipe.course}</div>\r\n      <div className=\"recipeIngredientsListContainer\">\r\n      <div className=\"recipeIngredientsList\">\r\n        {recipe.ingredients.map(ingredient => {\r\n          return <div className=\"recipeIngredient\">{ingredient}</div>\r\n      })}</div>\r\n      </div>\r\n      <div className=\"recipeInstructions\">{documentToReactComponents(recipe.instruction.json)}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import logo from './logo.svg';\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\nimport {NavLink, Switch, Route} from 'react-router-dom';\nimport Home from './Home';\nimport Recipe from './Recipe'\n\n// const GqlSpaceId = 'njpamh37adwc';\n\n// const GqlToken = '4TvBJEJIG7PBWPKDW_w-_2Mv6JTveJxGsNK6dZ3LlQY'\n\nconst query = `\n{\n  recipeCollection {\n    items {\n      sys {id},\n      name,\n      course,\n      picture {\n        url\n      }\n    }\n  }\n}\n`\n\nfunction App() {\n\n\n  return (\n  <Switch>\n    <Route exact path=\"/\" component={Home} />\n    <Route exact path=\"/:id\" component={Recipe} />\n  </Switch>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from 'react-router-dom'\n\nReactDOM.render(\n  <BrowserRouter basename='/pocket-cookbook/'>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}